
// ====================================================================================================
// ====================================================================================================
// ====================================================================================================
// ====================================================================================================
// ====================================================================================================
// ====================================================================================================
// ====================================================================================================
// ====================================================================================================
// ====================================================================================================
// ====================================================================================================
            _getItemFromForm: function (form) {
                form = $(form);
                var itemOne = {};
                form.find('input[type!=submit],select').each(function () {
                    itemOne[this.name] = $(this).val();
                });
                return itemOne;
            },

// ====================================================================================================
    $('#modalDelete').on('show', function () {
        var form = $('#frmDelete');
        var itemOne = form.data('itemOne');
        if (!itemOne)
            return;

        $('<input>').attr('type', 'hidden')
                    .attr('id', 'id')
                    .attr('name', 'id')
                    .val(itemOne.id()).prependTo(form);
        @* This line will need changed *@
        $("#spnDelete").html('(' + itemOne.id() + ') ' + itemOne.domain());
    });
// ====================================================================================================
    $('#modalEdit').on('show', function () {
        var form = $('#frmEdit');
        var itemOne = form.data('itemOne');
        if (!itemOne)
            return;

        $('<input>').attr('type', 'hidden')
                    .attr('id', 'id')
                    .attr('name', 'id')
                    .val(itemOne.id()).prependTo(form);
        form.find('#Domain').val(itemOne.domain());
    });

// ====================================================================================================
// Without these lines, the dialogs close when somebody clicks outside of them.
$('#modalEdit').modal({ "backdrop": "static", show: false });
$('#modalDelete').modal({ "backdrop": "static", show: false });

// ====================================================================================================
$('#modalDelete').on('hide', function () {
    var form = $('#frmDelete');
    form.validate().resetForm();
    form.get(0).reset();
    form.removeData('itemOne');
    form.find("input[type='hidden'][id='id']").remove();
});


// ====================================================================================================
'@Url.RouteUrl("DefaultApi", new { httproute = "", controller = "tenant" })'
// ====================================================================================================
'@Url.RouteUrl("Default", new { httproute = "", controller = "tenant/list" })'
// ====================================================================================================
        function TenantsViewModel() {
            var self = this;
            self.tenants = ko.observableArray();
// ====================================================================================================
.modal-backdrop, .modal-backdrop.fade.in

// ====================================================================================================
<i class='icon-pencil' data-id="editKey: $data.Id" data-bind="click: function (data) { $('#modalEdit').modal('toggle', 'data-target: 2'); }" ></i>

// ====================================================================================================
<i class='icon-pencil' data-target="#modalEdit" data-toggle="modal" data-bind="editKey: $data.Id" ></i>

// ====================================================================================================
<td width="20px">
    <a href="#modalEdit" data-toggle="modal">here</a>
    <i class='icon-pencil' data-bind="click: function (data) { alert('wow'); myFunction('param1', data) }" ></i>
</td>
// ====================================================================================================
    <form data-bind="submit: addItem">
        New item:
    <input data-bind='value: itemToAdd, valueUpdate: "afterkeydown"' />
        <button type="submit" data-bind="enable: itemToAdd().length > 0">Add</button>
        <p>Your items:</p>
        <select multiple="multiple" width="50" data-bind="options: items"></select>
    </form>

// ====================================================================================================
        var SimpleListModel = function (items) {
            this.items = ko.observableArray(items);
            this.itemToAdd = ko.observable("");
            this.addItem = function () {
                if (this.itemToAdd() != "") {
                    this.items.push(this.itemToAdd()); // Adds the item. Writing to the "items" observableArray causes any associated UI to update.
                    this.itemToAdd(""); // Clears the text box, because it's bound to the "itemToAdd" observable
                }
            }.bind(this);  // Ensure that "this" is always this view model
        };

        ko.applyBindings(new SimpleListModel(["Alpha", "Beta", "Gamma"]));

// ====================================================================================================
