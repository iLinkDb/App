@using IlinkDb.Entity
@{
    Layout = null;
}
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Fred</title>
</head>
<body>
    <div>
        <table id="stories" class="table table-striped table-hover table-condensed">
            <thead>
                <tr>
                    <td>&nbsp;</td>
                    <td>Id</td>
                    <td>Name</td>
                    <td>&nbsp;</td>
                </tr>
            </thead>
            <tbody data-bind="foreach: storyViewModel.itemList">
                <tr>
                    <td width="20px">
                        <a href="#modalEdit" data-bind="click: function (form) { editItem() }" data-toggle="modal" class='icon-pencil'></a>
                    </td>
                    <td data-bind="text: id"></td>
                    <td class="item" data-bind="text: name"></td>
                </tr>
            </tbody>
        </table>
    </div>
</body>

<script type='text/javascript'>
    var restHost = 'localhost:30441';
    var controller = 'story';

    function story(item) {
        this.id = ko.observable(item.id);
        this.projectId = ko.observable(item.projectId);
        this.name = ko.observable(item.name);
        this.description = ko.observable(item.description);
        this.estimate = ko.observable(item.estimate);

        this.updateItem = function (item) {
            this.id(item.id);
            this.projectId(item.projectId);
            this.name(item.name);
            this.description(item.description);
            this.estimate(item.estimate);
        };

        this.editItem = function () {
            var form = $('#frmEdit');
            form.data('story', this);
        };
    }

    var storyViewModel = {
        itemList: ko.observableArray([]),

        loadItemList: function () {
            var self = this;
            $.getJSON('http://' + restHost + '/' + controller + '/list?projectid=830205',
                function (itemList) {
                    self.itemList.removeAll();
                    $.each(itemList, function (index, item) {
                        self.itemList.push(new story(item));
                    });
                }
            );
        }
    };

    var PostEdit = function (form, modalName, viewModel) {
        form = $(form);
        //                if (!form.valid())
        //                    return;
        var json = JSON.stringify(am.GetItemFromForm(form));

        // console.log('In PostEdit');

        var update = form.find("input[type='hidden'][id='id']").val();
        var httpVerb = !update ? "POST" : "PUT";

        var self = this;
        $.ajax({
            url: 'http://' + restHost + '/' + controller + '/' + httpVerb.toLowerCase(),
            type: httpVerb,
            data: json,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (jsonObject) {
                if (update) {
                    var match = ko.utils.arrayFirst(viewModel.itemList(), function (item) {
                        return jsonObject.id === item.id();
                    });
                    match.updateItem(jsonObject);
                }
                else {
                    viewModel.itemList.push(new tenant(jsonObject));
                }
                $('#' + modalName).modal('hide');
            }
        });
    }



    $(function () {
        ko.applyBindings(storyViewModel);
        storyViewModel.loadItemList();

        am.initModal('modalEdit');

    });

</script>

@{ Html.RenderPartial("~/Views/Story/StoryEdit.cshtml", new Story { ProjectId = 830205 }); }
</html>
