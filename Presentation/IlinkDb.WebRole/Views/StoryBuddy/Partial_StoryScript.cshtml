<script type='text/javascript'>

    msb.story = function (item) {
        am.TraceDir("Story/msb.story", item);
        var self = this;

        self.id = ko.observable(item.id);
        self.name = ko.observable(item.name);
        self.description = ko.observable(item.description);
        self.estimate = ko.observable(item.estimate);
        self.labels = ko.observable(item.labels);
        
        this.updateItem = function (item) {
            am.TraceDir("msb.updateItem", item);
            this.id(item.id);
            this.name(item.name);
            this.description(item.description);
            this.estimate(item.estimate);
            this.labels(item.labels);
        };

        this.editItem = function () {
            am.TraceDir("msb.editItem", this);
            var form = $('#msbFormEdit');

            form.data('story', this);
        };
    };

    msb.storyViewModel = {
        itemList: ko.observableArray([]),

        loadItemList: function () {
            var self = this;
            $.getJSON('http://' + msb.restHost + '/' + msb.controller + '/ListForLabel?label=' + encodeURIComponent(location.pathname),
                function (itemList) {
                    self.itemList.removeAll();
                    $.each(itemList, function (index, item) {
                        am.TraceDir("pushing story:", item);
                        self.itemList.push(new msb.story(item));
                    });
                }
            );
        }
    };

    msb.PostEdit = function () {
        var form = $('#msbFormEdit');
        am.TraceDir("msb.PostEdit", form);
        //                if (!form.valid())
        //                    return;
        var json = JSON.stringify(msb.GetItemFromForm());

        // console.log('In PostEdit');

        var update = form.find("input[type='hidden'][id='id']").val();
        if (update == undefined) {
            update = false;
        }
        am.TraceDir("msb.PostEdit update: ", update);
        var httpVerb = !update ? "POST" : "PUT";

        var self = this;
        $.ajax({
            url: 'http://' + msb.restHost + '/' + msb.controller + '/' + httpVerb.toLowerCase() + '?label=' + encodeURIComponent(location.pathname),
            type: httpVerb,
            data: json,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (jsonObject) {
                am.Trace("updateSuccess");
                if (update) {
                    var match = ko.utils.arrayFirst(msb.storyViewModel.itemList(), function (item) {
                        return jsonObject.id === item.id();
                    });
                    match.updateItem(jsonObject);
                } else {
                    msb.storyViewModel.itemList.push(new msb.story(jsonObject));
                }
                $('#msb_ModalEdit').modal('hide');
            }
        });
    };

    msb.GetItemFromForm = function () {
        var form = $('#msbFormEdit');
        var item = {};
        form.find('input[type!=submit],select,textarea').each(function () {
            am.Trace("msb.GetItemFromForm", this);
            item[this.name] = $(this).val();
        });
        return item;
    };

    $('#msb_ModalEdit').on('hide', function () {
        am.Trace("msb_ModalEdit onHide");
        var form = $('#msbFormEdit');
        form.validate().resetForm();
        form.get(0).reset();
        form.removeData('story');
        form.find("input[type='hidden'][id='id']").remove();
    });

    $('#msb_ModalEdit').on('show', function () {
        am.Trace("msb_ModalEdit onShow");
        var form = $('#msbFormEdit');
        var story = form.data('story');
        if (!story)
            return;

        am.TraceDir("story: ", story);
        $('<input>').attr('type', 'hidden').attr('id', 'id').attr('name', 'id')
            .val(story.id()).prependTo(form);

        // Update the form fields to be edited.
        form.find('#Name').val(story.name());
        form.find('#Description').val(story.description());
        form.find('#Estimate').val(story.estimate());

        am.TraceDir("Dumping story:", story);

        msb.editStoryId = story.id();
        msb.loadTasks();

        $("#spnTitle").html(story.name() + ' <span class="EditTitle">(' + story.id() + ')</span>');
    });

</script>
