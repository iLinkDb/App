@using IlinkDb.Entity

@{
    ViewBag.Title = "Index";
}

<h2>Tenants</h2>
<div class="hero-unit">
    <h1>Tenants</h1>
    <p>Some description here...</p>
    <p><a href="#" class="btn btn-primary btn-large">Learn more &raquo;</a></p>
</div>

<div class="row">
    <div class="span2">
    </div>
    <div class="span4">
        <table id="timesheets" class="table table-striped table-hover table-condensed">
            <thead>
                <tr>
                    <td>&nbsp;</td>
                    <td>Id</td>
                    <td>Tenant</td>
                </tr>
            </thead>
            <tbody data-bind="foreach: viewModel.timesheets">
                <tr>
                    <td width="20px">
                        <a href="#timesheet-modal" data-bind="click: function (form) { edit('Timesheet') }" data-toggle="modal" class='icon-pencil'></a>
                    </td>
                    <td data-bind="text: id"></td>
                    <td class="item" data-bind="text: domain"></td>
                </tr>
            </tbody>
        </table>

    </div>
    <div class="span6">
    </div>
</div>

<div class="modal hide" id="timesheet-modal">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">×</button>
        <h3>Edit Tenant</h3>
    </div>

    <form id="Timesheet" data-bind="submit: function (form) { postTimesheet(form, 'timesheet-modal') }">
        <div class="modal-body">
            @{ Html.RenderPartial("ModalEdit", new Tenant()); }
        </div>

        <div class="modal-footer">
            <a href="#" class="btn" data-dismiss="modal">Cancel</a>
            <input type="submit" class="btn btn-primary" value="Save" />
        </div>
    </form>
</div>


@section scripts
{
    <script type='text/javascript'>

        $(function () {
            ko.applyBindings(viewModel);
            viewModel.loadTimesheets();
        });

        function timesheet(timesheet) {
            this.id = ko.observable(timesheet.id);
            this.domain = ko.observable(timesheet.domain);

            this.edit = function (formId) {
                var form = $('#' + formId);
                form.data('timesheet', this);
            };

            this.update = function (timesheet) {
                this.id(timesheet.id);
                this.domain(timesheet.domain);
            };

            //this.select = function (s, e) {
            //    console.log(e);
            //};
        }

        var viewModel = {
            timesheets: ko.observableArray([]),

            loadTimesheets: function () {
                var self = this;
                $.getJSON('http://localhost:30441/tenant/list',
                    function (timesheets) {
                        self.timesheets.removeAll();
                        $.each(timesheets, function (index, item) {
                            self.timesheets.push(new timesheet(item));
                        });
                    }
                );
            },

            postTimesheet: function (form, modalId) {
            //    form = $(form);
            //    if (!form.valid())
            //        return;

            //    var json = JSON.stringify(this._getTimesheetFromFrom(form));

            //    var update = form.find("input[type='hidden'][id='id']").val();
            //    var httpVerb = !update ? "POST" : "PUT";

            //    var self = this;
            //    $.ajax({
            //        url: 'http://localhost:30441/tenant/put',
            //type: httpVerb,
            //data: json,
            //dataType: 'json',
            //contentType: 'application/json; charset=utf-8',
            //success: function (jsonObject) {
            //    if (update) {
            //        var match = ko.utils.arrayFirst(self.timesheets(), function (item) {
            //            return jsonObject.id === item.id();
            //        });
            //        match.update(jsonObject);
            //    }
            //    else {
            //        self.timesheets.push(new timesheet(jsonObject));
            //    }
            //    $('#' + modalId).modal('hide');
            //}
        //});
    },

@*            deleteTimesheets: function (modalId) {
                var ids = new Array();
                $.each(this.timesheets(), function (index, timesheet) {
                    if (timesheet.selected())
                        ids.push(timesheet.id());
                });

                var self = this;
                $.ajax({
                    url: '@Url.RouteUrl("DefaultApi", new { httproute = "", controller = "tenant" })',
            type: 'DELETE',
            data: ko.toJSON(ids),
            contentType: 'application/json; charset=utf-8',
            success: function () {
                $.each(ids, function (index, id) {
                    var match = ko.utils.arrayFirst(self.timesheets(), function (item) {
                        return id === item.id();
                    });
                    self.timesheets.remove(match);
                });
                $('#' + modalId).modal('hide');
            }
        });
    },*@

            _getTimesheetFromFrom: function (form) {
                form = $(form);
                var timesheet = {};
                form.find('input[type!=submit],select').each(function () {
                    timesheet[this.name] = $(this).val();
                });
                return timesheet;
            }
        };


        //$('#timesheet-modal').on('hide', function () {
        //    var form = $('#Timesheet');
        //    form.validate().resetForm();
        //    form.get(0).reset();
        //    form.removeData('timesheet');
        //    form.find("input[type='hidden'][id='id']").remove();
        //});

        $('#timesheet-modal').on('show', function () {
            var form = $('#Timesheet');
            var timesheet = form.data('timesheet');
            if (!timesheet)
                return;

            $('<input>').attr('type', 'hidden')
                        .attr('id', 'id')
                        .attr('name', 'id')
                        .val(timesheet.id()).prependTo(form);
            form.find('#Domain').val(timesheet.domain());
        });

        //viewModel.timesheetsSelected = ko.computed(function () {
        //    var selected = 0;
        //    $.each(this.timesheets(), function (index, timesheet) {
        //        if (timesheet.selected())
        //            selected++;
        //    });
        //    return selected;
        //}, viewModel);

    </script>
}
